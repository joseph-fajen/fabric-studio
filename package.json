{
  "name": "youtube-fabric-processor",
  "version": "1.0.0",
  "description": "Standalone web app for processing YouTube videos through fabric patterns",
  "main": "server.js",
  "scripts": {
    "start": "node server.js",
    "dev": "nodemon server.js",
    "build": "echo 'Build completed - ready for deployment'",
    "stop": "node -e \"const fs=require('fs'),path=require('path'),pidFile=path.join(__dirname,'.server.pid'); if(fs.existsSync(pidFile)){const pid=fs.readFileSync(pidFile,'utf8'); try{process.kill(parseInt(pid),'SIGTERM'); console.log('Server stopped'); fs.unlinkSync(pidFile);}catch(e){console.log('Server was not running'); fs.unlinkSync(pidFile);}} else{console.log('No server running');}\"",
    "restart": "npm run stop && sleep 2 && npm start",
    "status": "node -e \"const fs=require('fs'),path=require('path'),pidFile=path.join(__dirname,'.server.pid'); if(fs.existsSync(pidFile)){const pid=fs.readFileSync(pidFile,'utf8'); try{process.kill(parseInt(pid),0); console.log('Server is running (PID:',pid+')');}catch(e){console.log('Server is not running (stale PID file)'); fs.unlinkSync(pidFile);}} else{console.log('Server is not running');}\"",
    "install:yt-dlp": "pip install yt-dlp",
    "setup": "npm run install:yt-dlp && echo 'Please install Fabric CLI: go install github.com/danielmiessler/fabric@latest'"
  },
  "dependencies": {
    "archiver": "^5.3.1",
    "body-parser": "^1.20.2",
    "cors": "^2.8.5",
    "express": "^4.18.2",
    "fs-extra": "^11.1.1",
    "googleapis": "^154.1.0",
    "path": "^0.12.7",
    "uuid": "^9.0.0",
    "ws": "^8.13.0"
  },
  "devDependencies": {
    "nodemon": "^3.0.1"
  },
  "engines": {
    "node": ">=14.0.0"
  },
  "author": "Joseph Fajen",
  "license": "MIT"
}
